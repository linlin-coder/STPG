# Cromwell HTTP server settings
include required(classpath("application"))
webservice {
  #port = 8100
  interface = 0.0.0.0
  binding-timeout = 5s
  instance.name = "reference"
}

#database {
#  profile = "slick.jdbc.MySQLProfile$"
#  db {
#    driver = "com.mysql.cj.jdbc.Driver"
#    url = "jdbc:mysql://10.10.112.100/cromwell?rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true"
#    user = "root"
#    port = 3310
#    password = "123456"
#    connectionTimeout = 5000
#  }
#}

system {
  abort-jobs-on-terminate=true
}

call-caching {
  enabled = true

  # In a multi-user environment this should be false so unauthorized users don't invalidate results for authorized users.
  invalidate-bad-cache-results = true
  hashing-strategy: "md5"

}

docker {
  hash-lookup {
    # Set this to match your available quota against the Google Container Engine API
    #gcr-api-queries-per-100-seconds = 1000

    # Time in minutes before an entry expires from the docker hashes cache and needs to be fetched again
    #cache-entry-ttl = "20 minutes"

    # Maximum number of elements to be kept in the cache. If the limit is reached, old elements will be removed from the cache
    #cache-size = 200

    # How should docker hashes be looked up. Possible values are "local" and "remote"
    # "local": Lookup hashes on the local docker daemon using the cli
    # "remote": Lookup hashes on docker hub and gcr
    #method = "remote"
  }
}

backend {
  default = "SGE"

  providers {
      SGE {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
            run-in-background = true
            runtime-attributes = """
              String? docker
              String? sge_mount
              String? sge_queue
            """
            submit = """
                qsub \
                    -terse \
                    -V \
                    -b n \
                    -N ${job_name} \
                    -wd ${cwd} \
                    -o ${out}.qsub \
                    -e ${err}.qsub \
                    ${"-q " + sge_queue} \
                    ${script}
            """
           job-id-regex = "(\\d+)"
           kill = "qdel ${job_id}"
           check-alive = "qstat -j ${job_id}"
           root = "cromwell-executions"
           filesystems {

              # For SFS backends, the "local" configuration specifies how files are handled.
              local {

                # Try to hard link (ln), then soft-link (ln -s), and if both fail, then copy the files.
                localization: [
                  "hard-link", "soft-link", "copy"
                ]

                # Call caching strategies
                caching {
                  # When copying a cached result, what type of file duplication should occur.
                  # For more information check: https://cromwell.readthedocs.io/en/stable/backends/HPC/#shared-filesystem
                  duplication-strategy: [
                    "hard-link", "soft-link", "copy"
                  ]

                  # Strategy to determine if a file has been used before.
                  # For extended explanation and alternative strategies check: https://cromwell.readthedocs.io/en/stable/Configuring/#call-caching
                  hashing-strategy: "md5"

                  # When true, will check if a sibling file with the same name and the .md5 extension exists, and if it does, use the content of this file as a hash.
                  # If false or the md5 does not exist, will proceed with the above-defined hashing strategy.
                  check-sibling-md5: false
                }
              }
            }

            # The defaults for runtime attributes if not provided.
            default-runtime-attributes {
              failOnStderr: false
              continueOnReturnCode: 0
            }
        }
    }
  }
}
